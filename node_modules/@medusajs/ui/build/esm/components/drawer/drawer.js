import { XMark } from '@medusajs/icons';
import * as Primitives from '@radix-ui/react-dialog';
import * as React from 'react';
import { clx } from '../../utils/clx.js';
import { Badge } from '../badge/badge.js';
import { Text } from '../text/text.js';
import { Button } from '../button/button.js';
import { Heading } from '../heading/heading.js';

const Root = Primitives.Root;
Root.displayName = "Drawer.Root";
const Trigger = Primitives.Trigger;
Trigger.displayName = "Drawer.Trigger";
const Close = Primitives.Close;
Close.displayName = "Drawer.Close";
const Portal = Primitives.Portal;
Portal.displayName = "Drawer.Portal";
const Overlay = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Primitives.Overlay, Object.assign({
    ref: ref,
    className: clx("fixed inset-0 z-50", className)
  }, props));
});
Overlay.displayName = "Drawer.Overlay";
const Content = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(Overlay, null), /*#__PURE__*/React.createElement(Primitives.Content, Object.assign({
    ref: ref,
    className: clx("bg-ui-bg-base shadow-elevation-modal fixed inset-y-2 right-2 z-50 flex w-full max-w-[560px] flex-1 flex-col rounded-lg border focus:outline-none",
    // "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-right-1/2 data-[state=open]:slide-in-from-right-1/2 duration-200",  // Re-enable when Admin UI has been cleaned up
    className)
  }, props)));
});
Content.displayName = "Drawer.Content";
const Header = ({
  children,
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: "border-ui-border-base flex items-start justify-between gap-x-4 border-b px-8 py-6"
  }, props), /*#__PURE__*/React.createElement("div", {
    className: clx("flex flex-col gap-y-1", className)
  }, children), /*#__PURE__*/React.createElement("div", {
    className: "flex items-center gap-x-2"
  }, /*#__PURE__*/React.createElement(Badge, {
    size: "sm",
    color: "grey"
  }, "esc"), /*#__PURE__*/React.createElement(Close, {
    asChild: true
  }, /*#__PURE__*/React.createElement(Button, {
    variant: "transparent",
    size: "sm",
    format: "icon"
  }, /*#__PURE__*/React.createElement(XMark, null)))));
};
Header.displayName = "Drawer.Header";
const Body = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: clx("flex-1 px-8 pb-16 pt-6", className)
  }, props));
};
Body.displayName = "Drawer.Body";
const Footer = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: clx("border-ui-border-base flex items-center justify-end space-x-2 overflow-y-scroll border-t px-8 pb-6 pt-4", className)
  }, props));
};
Footer.displayName = "Drawer.Footer";
const Title = /*#__PURE__*/React.forwardRef(({
  className,
  children,
  ...props
}, ref) => /*#__PURE__*/React.createElement(Primitives.Title, Object.assign({
  ref: ref,
  className: clx(className),
  asChild: true
}, props), /*#__PURE__*/React.createElement(Heading, {
  level: "h1"
}, children)));
Title.displayName = "Drawer.Title";
const Description = /*#__PURE__*/React.forwardRef(({
  className,
  children,
  ...props
}, ref) => /*#__PURE__*/React.createElement(Primitives.Description, Object.assign({
  ref: ref,
  className: clx(className),
  asChild: true
}, props), /*#__PURE__*/React.createElement(Text, null, children)));
Description.displayName = "Drawer.Description";
const Drawer = Object.assign(Root, {
  Body,
  Close,
  Content,
  Description,
  Footer,
  Header,
  Title,
  Trigger
});

export { Drawer };
