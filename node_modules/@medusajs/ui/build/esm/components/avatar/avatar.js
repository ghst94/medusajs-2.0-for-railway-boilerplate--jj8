import * as Primitives from '@radix-ui/react-avatar';
import { cva } from 'class-variance-authority';
import * as React from 'react';
import { clx } from '../../utils/clx.js';
import { labelVariants } from '../label/label.js';

const avatarVariants = cva("border-ui-border-strong flex shrink-0 items-center justify-center overflow-hidden border", {
  variants: {
    variant: {
      squared: "rounded-lg",
      rounded: "rounded-full"
    },
    size: {
      base: "h-8 w-8",
      large: "h-10 w-10"
    }
  },
  defaultVariants: {
    variant: "rounded",
    size: "base"
  }
});
const innerVariants = cva("aspect-square object-cover object-center", {
  variants: {
    variant: {
      squared: "rounded-lg",
      rounded: "rounded-full"
    },
    size: {
      base: clx(labelVariants({
        size: "small",
        weight: "plus"
      }), "h-6 w-6"),
      large: clx(labelVariants({
        size: "base",
        weight: "plus"
      }), "h-8 w-8")
    }
  },
  defaultVariants: {
    variant: "rounded",
    size: "base"
  }
});
const Avatar = /*#__PURE__*/React.forwardRef(({
  src,
  fallback,
  variant = "rounded",
  size = "base",
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Primitives.Root, Object.assign({
    ref: ref
  }, props, {
    className: clx(avatarVariants({
      variant,
      size
    }), className)
  }), src && /*#__PURE__*/React.createElement(Primitives.Image, {
    src: src,
    className: innerVariants({
      variant,
      size
    })
  }), /*#__PURE__*/React.createElement(Primitives.Fallback, {
    className: clx(innerVariants({
      variant,
      size
    }), "bg-ui-bg-component text-ui-fg-subtle pointer-events-none flex select-none items-center justify-center")
  }, fallback));
});
Avatar.displayName = "Avatar";

export { Avatar };
