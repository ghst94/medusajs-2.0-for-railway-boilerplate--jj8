import { Slot } from '@radix-ui/react-slot';
import { cva } from 'class-variance-authority';
import * as React from 'react';
import { clx } from '../../utils/clx.js';

const textVariants = cva("", {
  variants: {
    size: {
      base: "text-sm leading-6",
      large: "text-base leading-7",
      xlarge: "text-lg leading-8"
    },
    weight: {
      regular: "font-normal",
      plus: "font-medium"
    },
    family: {
      sans: "font-sans",
      mono: "font-mono"
    }
  },
  defaultVariants: {
    family: "sans",
    size: "base",
    weight: "regular"
  }
});
const Text = /*#__PURE__*/React.forwardRef(({
  className,
  asChild = false,
  size = "base",
  weight = "regular",
  family = "sans",
  children,
  ...props
}, ref) => {
  const Component = asChild ? Slot : "p";
  return /*#__PURE__*/React.createElement(Component, Object.assign({
    ref: ref,
    className: clx(textVariants({
      size,
      weight,
      family
    }), className)
  }, props), children);
});
Text.displayName = "Text";

export { Text, textVariants };
