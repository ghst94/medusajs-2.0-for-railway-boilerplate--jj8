import { XMark } from '@medusajs/icons';
import * as Primitives from '@radix-ui/react-dialog';
import * as React from 'react';
import { clx } from '../../utils/clx.js';
import { Kbd } from '../kbd/kbd.js';
import { Button } from '../button/button.js';

const Root = Primitives.Root;
Root.displayName = "FocusModal.Root";
const Trigger = Primitives.Trigger;
Trigger.displayName = "FocusModal.Trigger";
const Portal = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement(Primitives.DialogPortal, Object.assign({
    className: clx(className)
  }, props));
};
Portal.displayName = "FocusModal.Portal";
const Overlay = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Primitives.Overlay, Object.assign({
    ref: ref,
    className: clx("fixed inset-0 z-50",
    // "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",  // Re-enable when Admin UI has been cleaned up
    className)
  }, props));
});
Overlay.displayName = "FocusModal.Overlay";
const Content = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(Overlay, null), /*#__PURE__*/React.createElement(Primitives.Content, Object.assign({
    ref: ref,
    className: clx("bg-ui-bg-base shadow-elevation-modal fixed inset-2 z-50 flex flex-col rounded-lg border focus:outline-none",
    // "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 duration-200",  // Re-enable when Admin UI has been cleaned up
    className)
  }, props)));
});
Content.displayName = "FocusModal.Content";
const Header = ({
  children,
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: clx("border-ui-border-base flex items-start justify-between gap-x-4 border-b p-4", className)
  }, props), /*#__PURE__*/React.createElement("div", {
    className: "flex items-center gap-x-2"
  }, /*#__PURE__*/React.createElement(Primitives.Close, {
    asChild: true
  }, /*#__PURE__*/React.createElement(Button, {
    variant: "transparent",
    size: "sm",
    format: "icon"
  }, /*#__PURE__*/React.createElement(XMark, null))), /*#__PURE__*/React.createElement(Kbd, null, "esc")), /*#__PURE__*/React.createElement("div", null, children));
};
Header.displayName = "FocusModal.Header";
const Body = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: clx("flex-1", className)
  }, props));
};
Body.displayName = "FocusModal.Body";
const FocusModal = {
  Root,
  Trigger,
  Content,
  Header,
  Body
};

export { FocusModal };
