import { cva } from 'class-variance-authority';
import * as React from 'react';
import { clx } from '../../utils/clx.js';
import { labelVariants } from '../label/label.js';

const inputVariants = cva("bg-ui-bg-subtle hover:bg-ui-bg-subtle-hover border-ui-border-loud-muted invalid:!border-ui-border-error invalid:focus:!shadow-borders-error disabled:text-ui-fg-disabled disabled:!bg-ui-bg-disabled disabled:!border-ui-border-base focus:border-ui-border-interactive focus:shadow-borders-active placeholder:text-ui-fg-muted text-ui-fg-base relative w-full rounded-md border outline-none transition-all disabled:cursor-not-allowed disabled:!shadow-none", {
  variants: {
    size: {
      base: "h-10 px-3 py-[9px]",
      small: "h-8"
    }
  }
});
const Input = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement("input", Object.assign({
    ref: ref,
    className: clx(inputVariants({
      size: "base"
    }), labelVariants({
      size: "base"
    }), className)
  }, props));
});
Input.displayName = "Input";

export { Input };
