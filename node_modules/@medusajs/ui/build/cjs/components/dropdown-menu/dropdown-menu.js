'use strict';

var icons = require('@medusajs/icons');
var Primitives = require('@radix-ui/react-dropdown-menu');
var React = require('react');
var clx = require('../../utils/clx.js');
var label = require('../label/label.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var Primitives__namespace = /*#__PURE__*/_interopNamespaceDefault(Primitives);
var React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);

const Root = Primitives__namespace.Root;
Root.displayName = "DropdownMenu.Root";
const Trigger = Primitives__namespace.Trigger;
Trigger.displayName = "DropdownMenu.Trigger";
const Group = Primitives__namespace.Group;
Group.displayName = "DropdownMenu.Group";
const SubMenu = Primitives__namespace.Sub;
SubMenu.displayName = "DropdownMenu.SubMenu";
const RadioGroup = Primitives__namespace.RadioGroup;
RadioGroup.displayName = "DropdownMenu.RadioGroup";
const SubMenuTrigger = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  children,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.SubTrigger, Object.assign({
  ref: ref,
  className: clx.clx("focus:bg-ui-bg-base-pressed data-[state=open]:bg-ui-bg-base-pressed flex cursor-default select-none items-center rounded-sm px-3 py-2 outline-none", label.labelVariants({
    size: "small"
  }), className)
}, props), children, /*#__PURE__*/React__namespace.createElement(icons.ChevronRightMini, {
  className: "ml-auto"
})));
SubMenuTrigger.displayName = "DropdownMenu.SubMenuTrigger";
const SubMenuContent = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Portal, null, /*#__PURE__*/React__namespace.createElement(Primitives__namespace.SubContent, Object.assign({
  ref: ref,
  className: clx.clx("bg-ui-bg-base text-ui-fg-base data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 shadow-elevation-flyout z-50 min-w-[8rem] overflow-hidden rounded-lg border p-1", className)
}, props))));
SubMenuContent.displayName = "DropdownMenu.SubMenuContent";
const Content = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  sideOffset = 4,
  align = "start",
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Portal, null, /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Content, Object.assign({
  ref: ref,
  sideOffset: sideOffset,
  align: align,
  className: clx.clx("bg-ui-bg-base text-ui-fg-base data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 shadow-elevation-flyout z-50 min-w-[300px] overflow-hidden rounded-lg p-1", className)
}, props))));
Content.displayName = "DropdownMenu.Content";
const Item = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Item, Object.assign({
  ref: ref,
  className: clx.clx("bg-ui-bg-base focus:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled relative flex cursor-default select-none items-center rounded-md px-3 py-2 outline-none transition-colors data-[disabled]:pointer-events-none", label.labelVariants({
    size: "small"
  }), className)
}, props)));
Item.displayName = "DropdownMenu.Item";
const CheckboxItem = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  children,
  checked,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.CheckboxItem, Object.assign({
  ref: ref,
  className: clx.clx("focus:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled relative flex cursor-default select-none items-center rounded-md py-2 pl-10 pr-3 text-sm outline-none transition-colors data-[disabled]:pointer-events-none", className),
  checked: checked
}, props), /*#__PURE__*/React__namespace.createElement("span", {
  className: "absolute left-3 flex h-5 w-5 items-center justify-center"
}, /*#__PURE__*/React__namespace.createElement(Primitives__namespace.ItemIndicator, null, /*#__PURE__*/React__namespace.createElement(icons.CheckMini, null))), children));
CheckboxItem.displayName = "DropdownMenu.CheckboxItem";
const RadioItem = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  children,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.RadioItem, Object.assign({
  ref: ref,
  className: clx.clx("focus:bg-ui-bg-base-pressed hover:bg-ui-base-hover bg-ui-bg-base relative flex cursor-default select-none items-center rounded-md py-2 pl-10 pr-3 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[state=checked]:font-medium data-[disabled]:opacity-50", label.labelVariants({
    size: "small"
  }), className)
}, props), /*#__PURE__*/React__namespace.createElement("span", {
  className: "absolute left-3 flex h-5 w-5 items-center justify-center"
}, /*#__PURE__*/React__namespace.createElement(Primitives__namespace.ItemIndicator, null, /*#__PURE__*/React__namespace.createElement(icons.EllipseMiniSolid, {
  className: "text-ui-fg-base"
}))), children));
RadioItem.displayName = "DropdownMenu.RadioItem";
const Label = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Label, Object.assign({
  ref: ref,
  className: clx.clx("text-ui-fg-subtle px-2 py-1.5", label.labelVariants({
    size: "xsmall",
    weight: "plus"
  }), className)
}, props)));
Label.displayName = "DropdownMenu.Label";
const Separator = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React__namespace.createElement(Primitives__namespace.Separator, Object.assign({
  ref: ref,
  className: clx.clx("bg-ui-border-base -mx-1 my-1 h-px", className)
}, props)));
Separator.displayName = "DropdownMenu.Separator";
const Shortcut = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React__namespace.createElement("span", Object.assign({
    className: clx.clx("text-ui-fg-subtle ml-auto tracking-widest", label.labelVariants({
      size: "small"
    }), className)
  }, props));
};
Shortcut.displayName = "DropdownMenu.Shortcut";
const Hint = ({
  className,
  ...props
}) => {
  return /*#__PURE__*/React__namespace.createElement("span", Object.assign({
    className: clx.clx("text-ui-fg-subtle ml-auto tracking-widest", label.labelVariants({
      size: "small"
    }), className)
  }, props));
};
Hint.displayName = "DropdownMenu.Hint";
const DropdownMenu = Object.assign(Root, {
  Trigger,
  Group,
  SubMenu,
  SubMenuContent,
  SubMenuTrigger,
  Content,
  Item,
  CheckboxItem,
  RadioGroup,
  RadioItem,
  Label,
  Separator,
  Shortcut,
  Hint
});

exports.DropdownMenu = DropdownMenu;
