'use strict';

var classVarianceAuthority = require('class-variance-authority');
var React = require('react');
var clx = require('../../utils/clx.js');
var label = require('../label/label.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);

const inputVariants = classVarianceAuthority.cva("bg-ui-bg-subtle hover:bg-ui-bg-subtle-hover border-ui-border-loud-muted invalid:!border-ui-border-error invalid:focus:!shadow-borders-error disabled:text-ui-fg-disabled disabled:!bg-ui-bg-disabled disabled:!border-ui-border-base focus:border-ui-border-interactive focus:shadow-borders-active placeholder:text-ui-fg-muted text-ui-fg-base relative w-full rounded-md border outline-none transition-all disabled:cursor-not-allowed disabled:!shadow-none", {
  variants: {
    size: {
      base: "h-10 px-3 py-[9px]",
      small: "h-8"
    }
  }
});
const Input = /*#__PURE__*/React__namespace.forwardRef(({
  className,
  ...props
}, ref) => {
  return /*#__PURE__*/React__namespace.createElement("input", Object.assign({
    ref: ref,
    className: clx.clx(inputVariants({
      size: "base"
    }), label.labelVariants({
      size: "base"
    }), className)
  }, props));
});
Input.displayName = "Input";

exports.Input = Input;
